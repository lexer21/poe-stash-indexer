version: "3"
services:
  reverse-proxy:
    image: nginx:latest
    env_file:
      - configuration/environments/.env.development
    volumes:
      - "./configuration/instantiated/reverse-proxy/index.html:/var/www/index.html"
      - "./configuration/instantiated/reverse-proxy/default.conf:/etc/nginx/conf.d/default.conf"
      - "./configuration/instantiated/reverse-proxy/.htpasswd:/etc/nginx/.htpasswd"
    ports:
      - 0.0.0.0:8888:80

  indexer:
    build:
      context: .
      dockerfile: crates/indexer/Dockerfile
      target: development
    env_file:
      - configuration/environments/.env.development
    depends_on:
      - rabbitmq
      - otel-collector
    restart: "always"
    volumes:
      - ".:/app:cached"

  trade-ingest:
    build:
      context: .
      dockerfile: crates/trade-ingest/Dockerfile
      target: development
    depends_on:
      - rabbitmq
      - trade-store
      - otel-collector
    restart: "always"
    env_file:
      - configuration/environments/.env.development
    volumes:
      - ".:/app:cached"

  trade-api:
    build:
      context: .
      dockerfile: crates/trade-api/Dockerfile
      target: development
    depends_on:
      - trade-store
      - otel-collector
    restart: "always"
    env_file:
      - configuration/environments/.env.development
    volumes:
      - ".:/app:cached"

  trade-store:
    image: timescale/timescaledb:2.4.1-pg13
    env_file:
      - configuration/environments/.env.development

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    restart: "always"
    env_file:
      - configuration/environments/.env.development
    environment:
      RABBITMQ_CONFIG_FILE: "/etc/rabbitmq/rabbitmq.conf"
    volumes:
      - "./configuration/instantiated/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"

  # prometheus:
  #   image: prom/prometheus:latest
  #   restart: "always"
  #   env_file:
  #     - configuration/environments/.env.development
  #   volumes:
  #     - "./configuration/instantiated/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
  #     - "prometheus-store:/prometheus"

  # grafana:
  #   image: grafana/grafana:8.1.2
  #   restart: "always"
  #   env_file:
  #     - configuration/environments/.env.development
  #   user: "root"
  #   volumes:
  #     - "grafana-store:/var/lib/grafana"
  #     - "./configuration/instantiated/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards"
  #     - "./configuration/instantiated/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources"
  #     - "./configuration/instantiated/grafana/custom.ini:/etc/grafana/grafana.ini"

  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   restart: "always"
  #   env_file:
  #     - configuration/environments/.env.development

  # node-exporter:
  #   image: prom/node-exporter

  otel-collector:
    image: otel/opentelemetry-collector
    command: [--config=/etc/otel-collector-config.yaml]
    volumes:
      - ./configuration/instantiated/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 1888:1888 # pprof extension
      # - 8888:8888 # Prometheus metrics exposed by the collector
      # - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension

volumes:
  grafana-store:
  prometheus-store:
